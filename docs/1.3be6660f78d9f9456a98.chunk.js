webpackJsonp([1],{ZeTo:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t("WT6e"),l=function(){},i=t("INQx"),r=t("mu/C"),s=t("1OzB"),a=t("voZO"),c=t("Ml+6"),u=t("od15"),d=function(){function n(){this.runAnimation=!0,this.showFps=!0}return n.prototype.ngOnInit=function(){var n=this;this.renderer=new c.u({antialias:!0,canvas:this.shaderCanvas.nativeElement}),this.width=this.canvasWidth(),this.height=this.canvasHeight(),this.uniforms={time:{value:1},resolution:{value:new c.t(this.width,this.height)},mouse:{value:new c.t(.5,.5)}},this.onResize(),this.scene=new c.n,this.stats=new u,this.statsElem.nativeElement.appendChild(this.stats.dom),this.camera=new c.i(-1,1,1,-1,0,1),this.geometry=new c.k(2,2),this.material=new c.o({uniforms:this.uniforms,vertexShader:this.vertexShader||"\nvarying vec2 vUv;\n\nvoid main()\t{\n    vUv = uv;\n    gl_Position = vec4( position, 1.0 );\n}\n",fragmentShader:this.shaderCode}),this.mesh=new c.f(this.geometry,this.material),this.shaderCanvas.nativeElement.onmousemove=function(e){return n.onMouseMove(e)},this.scene.add(this.mesh),this.animate(1)},n.prototype.onMouseMove=function(n){console.log(this.width,n.offsetX),this.uniforms.mouse.value.x=n.offsetX/this.width,this.uniforms.mouse.value.y=(this.height-n.offsetY)/this.height},n.prototype.onResize=function(){this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(this.width/this.height),this.uniforms.resolution.value=new c.t(this.width,this.height)},n.prototype.ngOnChanges=function(n){var e=this;n.runAnimation&&!n.runAnimation.isFirstChange()&&n.runAnimation.currentValue&&requestAnimationFrame(function(n){return e.animate(n)})},n.prototype.ngDoCheck=function(){this.width===this.canvasWidth()&&this.height===this.canvasHeight()||(this.width=this.canvasWidth(),this.height=this.canvasHeight(),this.onResize())},n.prototype.render=function(n){this.stats.begin(),this.uniforms.time.value=n/1e3,this.renderer.render(this.scene,this.camera),this.stats.end()},n.prototype.animate=function(n){var e=this;this.runAnimation&&requestAnimationFrame(function(n){return e.animate(n)}),this.render(n)},n.prototype.canvasWidth=function(){return 300},n.prototype.canvasHeight=function(){return 200},n}(),f=o._1({encapsulation:0,styles:[["[_nghost-%COMP%]{display:block;width:100%;height:100%}.stats[_ngcontent-%COMP%]{-webkit-transform:translate(0,0);transform:translate(0,0)}.canvasContainer[_ngcontent-%COMP%]{width:300px;height:200px}"]],data:{}});function m(n){return o._26(0,[o._22(402653184,1,{shaderCanvas:0}),o._22(402653184,2,{canvasContainer:0}),o._22(402653184,3,{statsElem:0}),(n()(),o._3(3,0,[[3,0],["stats",1]],null,0,"div",[["class","stats"]],[[4,"display",null]],null,null,null,null)),(n()(),o._24(-1,null,["\n"])),(n()(),o._3(5,0,[[2,0],["canvasContainer",1]],null,3,"div",[["class","canvasContainer"]],null,null,null,null,null)),(n()(),o._24(-1,null,["\n  "])),(n()(),o._3(7,0,[[1,0],["webGlCanvas",1]],null,0,"canvas",[],[[8,"width",0],[8,"height",0]],null,null,null,null)),(n()(),o._24(-1,null,["\n"])),(n()(),o._24(-1,null,["\n"]))],null,function(n,e){var t=e.component;n(e,3,0,t.showFps?"block":"none"),n(e,7,0,t.width,t.height)})}var h=t("OE0E"),p=function(){function n(n){this.sanitizer=n}return n.prototype.transform=function(n){return this.sanitizer.bypassSecurityTrustHtml(n)},n}(),v=t("GuVZ"),_=t("j06o"),g=t("XHgV"),b=t("Xjw4"),x=t("LEdz"),y=t("AP/s"),w=t("U/+3"),C=t("7DMc"),S=[{code:"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n     \n    void main() {\n      gl_FragColor = vec4(1.0,0.0,1.0,1.0);\n    }",description:"Just pink, but at 30fps!"},{code:"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform float time;\n\n    void main() {\n\t    gl_FragColor = vec4(abs(sin(time)),0.0,0.0,1.0);\n    }",description:"Using an uniform value time to change color"},{code:"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform float time;\n    uniform vec2 resolution;\n\n    void main() {\n\t    \tvec2 st = gl_FragCoord.xy/resolution;\n\t      gl_FragColor = vec4(st, 0.0, 1.0);\n    }",description:"Using gl_FragCoord to colorize"},{code:"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n    \n    uniform vec2 resolution;\n    uniform float time;\n    \n    vec3 colorA = vec3(0.149,0.141,0.912);\n    vec3 colorB = vec3(1.000,0.833,0.224);\n    \n    void main() {\n      vec3 color = vec3(0.0);\n  \n      float pct = abs(sin(time));\n  \n      // Mix uses pct (a value from 0-1) to\n      // mix the two colors\n      color = mix(colorA, colorB, pct);\n  \n      gl_FragColor = vec4(color,1.0); \n    }",description:"Mixing colors"},{code:"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nvec3 colorA = vec3(0.149,0.141,0.912);\nvec3 colorB = vec3(1.000,0.833,0.224);\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n    vec3 color = vec3(0.0);\n\n    vec3 pct = vec3(st.x);\n\n    pct.r = smoothstep(0.0, mouse.x, st.x);\n    pct.g = sin(st.x*PI * ((mouse.x + mouse.y) * 0.5));\n    pct.b = pow(st.x, mouse.y);\n\n    color = mix(colorA, colorB, pct);\n\n    // Plot transition lines for each channel\n    color = mix(color,vec3(1.0,0.0,0.0),plot(st,pct.r));\n    color = mix(color,vec3(0.0,1.0,0.0),plot(st,pct.g));\n    color = mix(color,vec3(0.0,0.0,1.0),plot(st,pct.b));\n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Mixing colors and show a transition lines"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\n//  Function from I\xf1igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/resolution;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = mouse-st;\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter)*2.0;\n\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(vec3((angle/TWO_PI)+0.5 + mouse.y,radius,1.0));\n    \n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Hue Colors"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\n// Plot a line on Y using a value between 0.0-1.0\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid main() {\n\tvec2 st = gl_FragCoord.xy/resolution;\n\n    float y = st.x;\n\n    vec3 color = vec3(y);\n\n    // Plot a line\n    float pct = plot(st,y);\n    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n\tgl_FragColor = vec4(color,1.0);\n}",description:"Smoothstep function"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution;\n\n    float y = pow(st.x, 10.0 * mouse.y);\n\n    vec3 color = vec3(y);\n\n    float pct = plot(st,y);\n    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Power function"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution;\n\n    // Step will return 0.0 unless the value is over mouse.x,\n    // in that case it will return 1.0\n    float y = step(mouse.x,st.x);\n\n    vec3 color = vec3(y);\n\n    float pct = plot(st,y);\n    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Step function"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n    vec3 color = vec3(0.0);\n\n    // bottom-left\n    vec2 bl = step(vec2(mouse.x, mouse.y),st);\n    float pct = bl.x * bl.y;\n\n    // top-right\n     vec2 tr = step(vec2(0.1),1.0-st);\n     pct *= tr.x * tr.y;\n\n    color = vec3(pct);\n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Rectangle"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nfloat circle(in vec2 _st, in float _radius, in vec2 center){\n    vec2 dist = _st - center + 0.1;\n\treturn 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\nvoid main(){\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n\n    // cirlce\n    float bl = circle(st, 0.1 * sin(time * 5.0) + 0.2, mouse);\n\n    vec3 color = vec3(bl);\n    gl_FragColor = vec4(color,1.0);\n}",description:"Circle"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n    st.x *= resolution.x/resolution.y;\n    vec3 color = vec3(.0);\n\n    // Scale\n    st *= 3.;\n\n    // Tile the space\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\n    float m_dist = 1.;  // minimun distance\n\n    for (int y= -1; y <= 1; y++) {\n        for (int x= -1; x <= 1; x++) {\n            // Neighbor place in the grid\n            vec2 neighbor = vec2(float(x),float(y));\n\n            // Random position from current + neighbor place in the grid\n            vec2 point = random2(i_st + neighbor);\n\n\t\t\t// Animate the point\n            point = 0.5 + 0.5*sin(time + 6.2831*point);\n\n\t\t\t// Vector between the pixel and the point\n            vec2 diff = neighbor + point - f_st;\n\n            // Distance to the point\n            float dist = length(diff);\n\n            // Keep the closer distance\n            m_dist = min(m_dist, dist);\n        }\n    }\n\n    // Draw the min distance (distance field)\n    color += m_dist;\n\n    // Draw cell center\n    color += 1.-step(.02, m_dist);\n\n    // Draw grid\n    color.r += step(.98, f_st.x) + step(.98, f_st.y);\n\n    // Show isolines\n    // color -= step(.7,abs(sin(27.0*m_dist)))*.5;\n\n    gl_FragColor = vec4(color,1.0);\n}",description:"Cellular Noise"},{code:"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 resolution;\nuniform vec2 mouse;\nuniform float time;\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/resolution.xy*3.;\n     st += st * abs(sin(time*0.1)*3.0);\n    vec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*time);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.15*time );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.126*time);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(0.101961,0.619608,0.666667),\n                vec3(0.666667,0.666667,0.498039),\n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0,0,0.164706),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n\n    gl_FragColor = vec4((f*f*f+.6*f*f+.5*f)*color,1.);\n}",description:"Smoke noise"}],F=function(){function n(){}return n.prototype.ngOnInit=function(){this.shaders=S.map(function(n){return Object.assign({fullSize:!1},n)}),this.showFps=!1},n}(),M=o._1({encapsulation:0,styles:[[".shaders-container[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around}.shader-container[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex:1 1 30%;flex:1 1 30%;height:450px;overflow:hidden}.shader-code[_ngcontent-%COMP%]{display:none;height:150px;overflow-y:auto}"]],data:{}});function k(n){return o._26(0,[(n()(),o._3(0,0,null,null,22,"div",[["class","shader-container"]],null,null,null,null,null)),(n()(),o._24(-1,null,["\n    "])),(n()(),o._3(2,0,null,null,19,"mat-card",[["appRaiseCard",""],["class","mat-card"]],null,[[null,"mouseenter"],[null,"mouseleave"]],function(n,e,t){var l=!0;return"mouseenter"===e&&(l=!1!==o._15(n,4).addRaisedClass()&&l),"mouseleave"===e&&(l=!1!==o._15(n,4).unraise()&&l),l},r.d,r.a)),o._2(3,49152,null,0,s.a,[],null,null),o._2(4,540672,null,0,a.a,[o.k],null,null),(n()(),o._24(-1,0,["\n      "])),(n()(),o._3(6,0,null,0,2,"mat-card-title",[["class","mat-card-title"]],null,null,null,null,null)),o._2(7,16384,null,0,s.i,[],null,null),(n()(),o._24(8,null,["",""])),(n()(),o._24(-1,0,["\n      "])),(n()(),o._3(10,0,null,0,10,"mat-card-content",[["class","mat-card-content"]],null,null,null,null,null)),o._2(11,16384,null,0,s.d,[],null,null),(n()(),o._24(-1,null,["\n        "])),(n()(),o._3(13,0,null,null,2,"app-render-shader",[],null,null,null,m,f)),o._2(14,901120,null,0,d,[],{shaderCode:[0,"shaderCode"],showFps:[1,"showFps"]},null),(n()(),o._24(-1,null,["\n        "])),(n()(),o._24(-1,null,["\n        "])),(n()(),o._3(17,0,null,null,2,"div",[["class","shader-code"]],[[8,"innerHTML",1]],null,null,null,null)),o._19(18,1),(n()(),o._24(-1,null,["\n        "])),(n()(),o._24(-1,null,["\n      "])),(n()(),o._24(-1,0,["\n    "])),(n()(),o._24(-1,null,["\n  "]))],function(n,e){n(e,14,0,e.context.$implicit.code,e.component.showFps)},function(n,e){n(e,8,0,e.context.$implicit.description),n(e,17,0,o._25(e,17,0,n(e,18,0,o._15(e.parent,0),e.context.$implicit.code)))})}function P(n){return o._26(0,[o._17(0,p,[h.c]),(n()(),o._3(1,0,null,null,10,"mat-toolbar",[["class","mat-toolbar"]],[[2,"mat-toolbar-multiple-rows",null],[2,"mat-toolbar-single-row",null]],null,null,v.b,v.a)),o._2(2,4243456,null,1,_.a,[o.k,g.a,b.d],null,null),o._22(603979776,1,{_toolbarRows:1}),(n()(),o._24(-1,0,["\n  "])),(n()(),o._3(5,0,null,1,5,"mat-toolbar-row",[["class","mat-toolbar-row"]],null,null,null,null,null)),o._2(6,16384,[[1,4]],0,_.c,[],null,null),(n()(),o._24(-1,null,["\n    Some WebGl Shader Examples inspired by\xa0\n    "])),(n()(),o._3(8,0,null,null,1,"a",[["href","https://thebookofshaders.com"],["target","_blank"]],null,null,null,null,null)),(n()(),o._24(-1,null,["The Book of Shader"])),(n()(),o._24(-1,null,["\n  "])),(n()(),o._24(-1,0,["\n"])),(n()(),o._24(-1,null,["\n"])),(n()(),o._3(13,0,null,null,6,"mat-checkbox",[["class","mat-checkbox"]],[[8,"id",0],[2,"mat-checkbox-indeterminate",null],[2,"mat-checkbox-checked",null],[2,"mat-checkbox-disabled",null],[2,"mat-checkbox-label-before",null],[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngModelChange"]],function(n,e,t){var o=!0;return"ngModelChange"===e&&(o=!1!==(n.component.showFps=t)&&o),o},x.b,x.a)),o._2(14,4374528,null,0,y.b,[o.k,o.h,w.g,[8,null],[2,y.a]],null,null),o._20(1024,null,C.j,function(n){return[n]},[y.b]),o._2(16,671744,null,0,C.o,[[8,null],[8,null],[8,null],[2,C.j]],{model:[0,"model"]},{update:"ngModelChange"}),o._20(2048,null,C.k,null,[C.o]),o._2(18,16384,null,0,C.l,[C.k],null,null),(n()(),o._24(-1,0,["Show Fps"])),(n()(),o._24(-1,null,["\n"])),(n()(),o._3(21,0,null,null,4,"div",[["class","shaders-container"]],null,null,null,null,null)),(n()(),o._24(-1,null,["\n  "])),(n()(),o.Y(16777216,null,null,1,null,k)),o._2(24,802816,null,0,b.j,[o.M,o.J,o.q],{ngForOf:[0,"ngForOf"]},null),(n()(),o._24(-1,null,["\n"])),(n()(),o._24(-1,null,["\n\n\n"]))],function(n,e){var t=e.component;n(e,16,0,t.showFps),n(e,24,0,t.shaders)},function(n,e){n(e,1,0,o._15(e,2)._toolbarRows.length,!o._15(e,2)._toolbarRows.length),n(e,13,1,[o._15(e,14).id,o._15(e,14).indeterminate,o._15(e,14).checked,o._15(e,14).disabled,"before"==o._15(e,14).labelPosition,o._15(e,18).ngClassUntouched,o._15(e,18).ngClassTouched,o._15(e,18).ngClassPristine,o._15(e,18).ngClassDirty,o._15(e,18).ngClassValid,o._15(e,18).ngClassInvalid,o._15(e,18).ngClassPending])})}var E=o.Z("app-shader-examples",F,function(n){return o._26(0,[(n()(),o._3(0,0,null,null,1,"app-shader-examples",[],null,null,null,P,M)),o._2(1,114688,null,0,F,[],null,null)],function(n,e){n(e,1,0)},null)},{},{},[]),O=t("9Sd6"),R=t("6sdf"),A=t("Uo70"),j=t("1T37"),G=t("+j5Y"),I=t("Mcof"),L=t("7u3n"),D=t("z7Rf"),T=t("ItHS"),z=t("NwsS"),H=t("gsbp"),W=t("TBIh"),q=t("704W"),B=t("bkcK"),U=t("ZuzD"),V=t("sqmn"),N=t("kJ/S"),J=t("4rwD"),Z=t("86rF"),X=t("6GVX"),Y=t("JkvL"),$=t("+76Z"),K=t("fAE3"),Q=t("bfOx");t.d(e,"ShaderExamplesModuleNgFactory",function(){return nn});var nn=o._0(l,[],function(n){return o._11([o._12(512,o.j,o.W,[[8,[i.a,E]],[3,o.j],o.v]),o._12(4608,b.m,b.l,[o.s,[2,b.u]]),o._12(4608,C.u,C.u,[]),o._12(6144,O.b,null,[b.d]),o._12(4608,O.c,O.c,[[2,O.b]]),o._12(4608,g.a,g.a,[]),o._12(4608,w.i,w.i,[g.a]),o._12(4608,w.h,w.h,[w.i,o.x,b.d]),o._12(136192,w.d,w.b,[[3,w.d],b.d]),o._12(5120,w.l,w.k,[[3,w.l],[2,w.j],b.d]),o._12(5120,w.g,w.e,[[3,w.g],o.x,g.a]),o._12(4608,R.b,R.b,[]),o._12(4608,A.b,A.b,[]),o._12(5120,j.d,j.b,[[3,j.d],o.x,g.a]),o._12(5120,j.g,j.f,[[3,j.g],g.a,o.x]),o._12(4608,G.i,G.i,[j.d,j.g,o.x,b.d]),o._12(5120,G.e,G.j,[[3,G.e],b.d]),o._12(4608,G.h,G.h,[j.g,b.d]),o._12(5120,G.f,G.m,[[3,G.f],b.d]),o._12(4608,G.c,G.c,[G.i,G.e,o.j,G.h,G.f,o.g,o.p,o.x,b.d]),o._12(5120,G.k,G.l,[G.c]),o._12(4608,I.d,I.d,[g.a]),o._12(135680,I.a,I.a,[I.d,o.x]),o._12(5120,L.b,L.c,[G.c]),o._12(5120,D.d,D.a,[[3,D.d],[2,T.a],h.c,[2,b.d]]),o._12(5120,z.a,z.b,[G.c]),o._12(4608,h.f,A.c,[[2,A.g],[2,A.l]]),o._12(512,b.c,b.c,[]),o._12(512,C.r,C.r,[]),o._12(512,C.h,C.h,[]),o._12(512,O.a,O.a,[]),o._12(256,A.d,!0,[]),o._12(512,A.l,A.l,[[2,A.d]]),o._12(512,g.b,g.b,[]),o._12(512,A.v,A.v,[]),o._12(512,w.a,w.a,[]),o._12(512,H.c,H.c,[]),o._12(512,R.c,R.c,[]),o._12(512,y.c,y.c,[]),o._12(512,W.c,W.c,[]),o._12(512,q.b,q.b,[]),o._12(512,_.b,_.b,[]),o._12(512,B.e,B.e,[]),o._12(512,j.c,j.c,[]),o._12(512,G.g,G.g,[]),o._12(512,I.c,I.c,[]),o._12(512,L.e,L.e,[]),o._12(512,D.c,D.c,[]),o._12(512,s.g,s.g,[]),o._12(512,A.m,A.m,[]),o._12(512,A.t,A.t,[]),o._12(512,U.a,U.a,[]),o._12(512,V.c,V.c,[]),o._12(512,A.r,A.r,[]),o._12(512,z.d,z.d,[]),o._12(512,N.h,N.h,[]),o._12(512,J.a,J.a,[]),o._12(512,Z.b,Z.b,[]),o._12(512,X.j,X.j,[]),o._12(512,Y.b,Y.b,[]),o._12(512,$.b,$.b,[]),o._12(512,K.a,K.a,[]),o._12(512,Q.o,Q.o,[[2,Q.t],[2,Q.l]]),o._12(512,l,l,[]),o._12(256,L.a,{showDelay:0,hideDelay:0,touchendHideDelay:1500},[]),o._12(256,N.a,!1,[]),o._12(1024,Q.j,function(){return[[{path:"",component:F}]]},[])])})},od15:function(n,e,t){var o;n.exports=((o=function(){function n(n){return l.appendChild(n.dom),n}function e(n){for(var e=0;e<l.children.length;e++)l.children[e].style.display=e===n?"block":"none";t=n}var t=0,l=document.createElement("div");l.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",l.addEventListener("click",function(n){n.preventDefault(),e(++t%l.children.length)},!1);var i=(performance||Date).now(),r=i,s=0,a=n(new o.Panel("FPS","#0ff","#002")),c=n(new o.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var u=n(new o.Panel("MB","#f08","#201"));return e(0),{REVISION:16,dom:l,addPanel:n,showPanel:e,begin:function(){i=(performance||Date).now()},end:function(){s++;var n=(performance||Date).now();if(c.update(n-i,200),n>r+1e3&&(a.update(1e3*s/(n-r),100),r=n,s=0,u)){var e=performance.memory;u.update(e.usedJSHeapSize/1048576,e.jsHeapSizeLimit/1048576)}return n},update:function(){i=this.end()},domElement:l,setMode:e}}).Panel=function(n,e,t){var o=1/0,l=0,i=Math.round,r=i(window.devicePixelRatio||1),s=80*r,a=48*r,c=3*r,u=2*r,d=3*r,f=15*r,m=74*r,h=30*r,p=document.createElement("canvas");p.width=s,p.height=a,p.style.cssText="width:80px;height:48px";var v=p.getContext("2d");return v.font="bold "+9*r+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=t,v.fillRect(0,0,s,a),v.fillStyle=e,v.fillText(n,c,u),v.fillRect(d,f,m,h),v.fillStyle=t,v.globalAlpha=.9,v.fillRect(d,f,m,h),{dom:p,update:function(a,_){o=Math.min(o,a),l=Math.max(l,a),v.fillStyle=t,v.globalAlpha=1,v.fillRect(0,0,s,f),v.fillStyle=e,v.fillText(i(a)+" "+n+" ("+i(o)+"-"+i(l)+")",c,u),v.drawImage(p,d+r,f,m-r,h,d,f,m-r,h),v.fillRect(d+m-r,f,r,h),v.fillStyle=t,v.globalAlpha=.9,v.fillRect(d+m-r,f,r,i((1-a/_)*h))}}},o)}});